<launch>
	<!-- args -->
	<arg name="use_kinect" default="1"/>
	<arg name="use_sonar" default="1"/>
	<!-- Height is inverted, towards the sky is negative, towards the ground is positive -->
	<arg name="min_pc_height" default="-0.5"/>
	<arg name="max_pc_height" default="0.05"/>
	<arg name="euclidean_cluster_tolerance" default="0.05"/>
	<arg name="euclidean_min_cluster_size" default="100"/>	
	<arg name="euclidean_max_cluster_size" default="1048575"/>
	<arg name="voxel_size" default="0.01"/>
	<arg name="kinect_pfield_strength" default="1"/>
	<arg name="kinect_pfield_decay_time" default="2"/>

	<arg name="pi/2" value="1.5707963267948966" />

	<node pkg="tf" type="static_transform_publisher" name="kinect_to_base_link"
	     args="0 0 0.065 0 0 0 base_link camera_link 100" />  

	<group ns="percepts">
		<node pkg="percept_generators" type="encoder_to_vels.py" name="encoder_to_vels"/>
		<node pkg="percept_generators" type="encoder_fwd_kinematics.py" name="encoder_fwd_kinematics"/>
		<node if="$(arg use_sonar)" pkg="percept_generators" type="sonar_to_pfield.py" name="sonar_to_pfield"/>
		<node if="$(arg use_kinect)" pkg="kinect" type="colored_obj_extractor" name="object_extractor">
			<param name="min_pc_height" value="$(arg min_pc_height)" type="double"/>
			<param name="max_pc_height" value="$(arg max_pc_height)" type="double"/>
			<param name="euclidean_cluster_tolerance" value="$(arg euclidean_cluster_tolerance)" type="double"/>
			<param name="euclidean_min_cluster_size" value="$(arg euclidean_min_cluster_size)"/>	
			<param name="euclidean_max_cluster_size" value="$(arg euclidean_max_cluster_size)" type="int"/>
			<param name="voxel_size" value="$(arg voxel_size)" type="double"/>
			<param name="kinect_pfield_strength" value="$(arg kinect_pfield_strength)" type="double"/>
			<param name="kinect_pfield_decay_time" value="$(arg kinect_pfield_decay_time)" type="double"/>

		</node>
	</group>

</launch>